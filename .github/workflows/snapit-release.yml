name: SnapIt Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Package Version'
        required: true
        default: '5.0.0.0'

jobs:

  build:
    runs-on: windows-latest  # For a list of available runner types, refer to
                             # https://help.github.com/en/actions/reference/workflow-syntax-for-github-actions#jobsjob_idruns-on
    
    permissions:
      # Give the default GITHUB_TOKEN write permission to commit and push the
      # added or changed files to the repository.
      contents: write

    env:
      Solution_Name: SnapIt.sln                        # Replace with your solution name, i.e. MyWpfApp.sln.
      Project_Directory: SnapIt    # Replace with the Wap project directory relative to the solution, i.e. MyWpfApp.Package.
      Project_Path: SnapIt\SnapIt.csproj                # Replace with the path to your Wap project, i.e. MyWpf.App.Package\MyWpfApp.Package.wapproj.
      
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    # Install the .NET Core workload
    - name: Install .NET Core
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 8.0.x
     
    - run: choco install innosetup 
    
    - uses: actions/checkout@v3
      with:
        ref: ${{ github.head_ref }}

    - name: Modify version file
      run: ./versioning.ps1 -version ${{ github.event.inputs.version }}

    - name: Git Auto Commit
      uses: stefanzweifel/git-auto-commit-action@v4.16.0
      with:
        # Optional. Commit message for the created commit.
        # Defaults to "Apply automatic changes"
        commit_message: 'Update version'
        tagging_message: '${{ github.event.inputs.version }}'

    - run: dotnet publish ./SnapIt/SnapIt.csproj -c Standalone -a x86 -o ./SnapIt.Setup/build --self-contained false

    - run: iscc.exe SnapIt.Setup\\innoSetup.iss /DMyAppVersion=${{ github.event.inputs.version }}
    
    - name: release
      uses: actions/create-release@v1
      id: create_release
      with:
        draft: true
        prerelease: false
        release_name: ${{ github.event.inputs.version }}
        tag_name: ${{ github.event.inputs.version }}
      env:
        GITHUB_TOKEN: ${{ github.token }}
        
    - name: upload windows artifact
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ github.token }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./SnapIt.Setup/setup/setup_SnapIt_${{ github.event.inputs.version }}.exe
        asset_name: setup_SnapIt_${{ github.event.inputs.version }}.exe
        asset_content_type: application/x-msdownload
    
    #- name: Upload build artifacts
    #  uses: actions/upload-artifact@v3
    #  with:
    #    name: setup-${{ github.event.inputs.version }}
    #    path: SnapIt.Setup\setup 
