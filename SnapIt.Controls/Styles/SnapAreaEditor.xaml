<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:control="clr-namespace:SnapIt.Controls"
    xmlns:ui="http://schemas.lepo.co/wpfui/2022/xaml">

    <Style TargetType="{x:Type control:SnapAreaEditor}">
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type control:SnapAreaEditor}">
                    <Grid Margin="{Binding Path=AreaPadding, RelativeSource={RelativeSource TemplatedParent}}">
                        <Grid
                            x:Name="Area"
                            Background="{Binding Path=Theme.OverlayBrush, RelativeSource={RelativeSource TemplatedParent}, FallbackValue=Transparent}"
                            Opacity="{Binding Path=Theme.Opacity, RelativeSource={RelativeSource TemplatedParent}, FallbackValue=0.85}">
                            <Grid.ContextMenu>
                                <ContextMenu>
                                    <!--<ContextMenu Style="{DynamicResource UiNotifyIconContextMenuStyle}">-->
                                    <ui:MenuItem Command="{Binding Path=SplitVerticallyCommand, RelativeSource={RelativeSource TemplatedParent}}">
                                        <MenuItem.Header>
                                            <StackPanel Orientation="Horizontal">
                                                <ui:SymbolIcon Margin="0,0,6,0" Symbol="SplitVertical28" />
                                                <ContentPresenter Content="Split Vertically" />
                                            </StackPanel>
                                        </MenuItem.Header>
                                    </ui:MenuItem>
                                    <ui:MenuItem Command="{Binding Path=SplitHorizantallyCommand, RelativeSource={RelativeSource TemplatedParent}}">
                                        <MenuItem.Header>
                                            <StackPanel Orientation="Horizontal">
                                                <ui:SymbolIcon Margin="0,0,6,0" Symbol="SplitHorizontal28" />
                                                <ContentPresenter Content="Split Horizontally" />
                                            </StackPanel>
                                        </MenuItem.Header>
                                    </ui:MenuItem>
                                </ContextMenu>
                            </Grid.ContextMenu>
                        </Grid>

                        <Grid
                            x:Name="DesignPanel"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Panel.ZIndex="99"
                            Opacity="0">
                            <StackPanel Orientation="Horizontal">
                                <ui:Button
                                    x:Name="SplitVertically"
                                    Height="36"
                                    Margin="4,0"
                                    Padding="12,0"
                                    Appearance="Secondary"
                                    Background="#DD444444"
                                    Command="{Binding Path=SplitVerticallyCommand, RelativeSource={RelativeSource TemplatedParent}}"
                                    Icon="{ui:SymbolIcon SplitVertical28}"
                                    IsTabStop="False"
                                    ToolTip="Split Vertically" />

                                <ui:Button
                                    x:Name="SplitHorizantally"
                                    Height="36"
                                    Margin="4,0"
                                    Padding="12,0"
                                    Appearance="Secondary"
                                    Background="#DD444444"
                                    Command="{Binding Path=SplitHorizantallyCommand, RelativeSource={RelativeSource TemplatedParent}}"
                                    Icon="{ui:SymbolIcon SplitHorizontal28}"
                                    IsTabStop="False"
                                    ToolTip="Split Horizontally" />
                            </StackPanel>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <!--<Trigger SourceName="SplitVertically" Property="IsMouseOver" Value="True">
                            <Setter TargetName="DesignPanel" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger SourceName="SplitHorizantally" Property="IsMouseOver" Value="True">
                            <Setter TargetName="DesignPanel" Property="Visibility" Value="Visible" />
                        </Trigger>-->

                        <Trigger Property="IsAreaMouseOver" Value="True">
                            <!--<Setter TargetName="DesignPanel" Property="Visibility" Value="Visible" />-->
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="DesignPanel"
                                            Storyboard.TargetProperty="Opacity"
                                            To="0.0"
                                            Duration="0:0:0.16" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="DesignPanel"
                                            Storyboard.TargetProperty="Opacity"
                                            To="1"
                                            Duration="0:0:0.16" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsAreaMouseOver" Value="False">
                            <!--<Setter TargetName="DesignPanel" Property="Visibility" Value="Hidden" />-->
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="DesignPanel"
                                            Storyboard.TargetProperty="Opacity"
                                            To="0.0"
                                            Duration="0:0:0.16" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="DesignPanel"
                                            Storyboard.TargetProperty="Opacity"
                                            To="1"
                                            Duration="0:0:0.16" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>