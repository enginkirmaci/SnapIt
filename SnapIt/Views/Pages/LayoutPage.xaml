<Page
    x:Class="SnapIt.Views.Pages.LayoutPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:controls="clr-namespace:SnapIt.Controls;assembly=SnapIt.Controls"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:local="clr-namespace:SnapIt.Views.Pages"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:ui="http://schemas.lepo.co/wpfui/2022/xaml"
    Title="Layout"
    d:DataContext="{d:DesignInstance local:LayoutPage,
                                     IsDesignTimeCreatable=False}"
    d:DesignWidth="908"
    ui:Design.Background="{DynamicResource ApplicationBackgroundBrush}"
    ui:Design.Foreground="{DynamicResource TextFillColorPrimaryBrush}"
    Foreground="{DynamicResource TextFillColorPrimaryBrush}"
    mc:Ignorable="d">

    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <i:InvokeCommandAction Command="{Binding ViewModel.LoadedCommand}" PassEventArgsToCommand="True" />
        </i:EventTrigger>
    </i:Interaction.Triggers>

    <Grid x:Name="grid" DataContext="{Binding ViewModel}">
        <!--<Grid
            x:Name="ContentGrid"
            Width="141.67"
            HorizontalAlignment="Right"
            VerticalAlignment="Top"
            Visibility="Visible">
            <Grid.Triggers>
                <EventTrigger RoutedEvent="Grid.Loaded">
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation
                                BeginTime="0:0:3"
                                Storyboard.TargetName="ContentGrid"
                                Storyboard.TargetProperty="Width"
                                From="{Binding ElementName=TutorialHyperLink, Path=ActualWidth}"
                                To="44"
                                Duration="0:0:1">
                                <DoubleAnimation.EasingFunction>
                                    <CubicEase EasingMode="EaseOut" />
                                </DoubleAnimation.EasingFunction>
                            </DoubleAnimation>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
                <EventTrigger RoutedEvent="Grid.MouseEnter">
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation
                                Storyboard.TargetName="ContentGrid"
                                Storyboard.TargetProperty="Width"
                                To="{Binding ElementName=TutorialHyperLink, Path=Width}"
                                Duration="0:0:1">
                                <DoubleAnimation.EasingFunction>
                                    <CubicEase EasingMode="EaseOut" />
                                </DoubleAnimation.EasingFunction>
                            </DoubleAnimation>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
                <EventTrigger RoutedEvent="Grid.MouseLeave">
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation
                                Storyboard.TargetName="ContentGrid"
                                Storyboard.TargetProperty="Width"
                                To="44"
                                Duration="0:0:1">
                                <DoubleAnimation.EasingFunction>
                                    <CubicEase EasingMode="EaseOut" />
                                </DoubleAnimation.EasingFunction>
                            </DoubleAnimation>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
            </Grid.Triggers>

            <ui:HyperlinkButton
                x:Name="TutorialHyperLink"
                Padding="11,5,4,6"
                Content="Watch tutorial  "
                Icon="{ui:SymbolIcon VideoClip24}"
                NavigateUri="http://nuget.org/packages/WPF-UI/" />
        </Grid>-->

        <!--<ui:Dialog
            Panel.ZIndex="9"
            ButtonLeftName="Save"
            DialogHeight="190"
            IsShown="{Binding IsRenameDialogOpen, Mode=TwoWay}"
            Visibility="{Binding IsRenameDialogOpen, Converter={StaticResource BooleanToVisibilityConverter}}">
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="ButtonRightClick">
                    <i:InvokeCommandAction Command="{Binding RenameDialogClosingCommand}" CommandParameter="{StaticResource FalseValue}" />
                </i:EventTrigger>
                <i:EventTrigger EventName="ButtonLeftClick">
                    <i:InvokeCommandAction Command="{Binding RenameDialogClosingCommand}" CommandParameter="{StaticResource TrueValue}" />
                </i:EventTrigger>
            </i:Interaction.Triggers>
            <StackPanel>
                <TextBlock FontWeight="Medium" Text="Layout Name" />
                <TextBox
                    Margin="0,6,0,0"
                    HorizontalAlignment="Stretch"
                    Text="{Binding RenameDialogLayoutName}" />
            </StackPanel>
        </ui:Dialog>-->

        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition />
            </Grid.RowDefinitions>
            <StackPanel>
                <ui:CardControl Margin="0,0,0,8" Icon="{ui:SymbolIcon RectangleLandscape48}">
                    <ui:CardControl.Header>
                        <StackPanel Grid.Column="0" VerticalAlignment="Center">
                            <TextBlock
                                FontSize="13"
                                FontWeight="Medium"
                                Text="Screens" />
                            <TextBlock
                                FontSize="12"
                                Foreground="{DynamicResource TextFillColorTertiaryBrush}"
                                Text="Select screen and proceed to layout section."
                                TextWrapping="Wrap" />
                        </StackPanel>
                    </ui:CardControl.Header>
                </ui:CardControl>

                <Border
                    Margin="0,0,0,8"
                    Padding="20"
                    Background="{DynamicResource SolidBackgroundFillColorSecondaryBrush}"
                    BorderBrush="{DynamicResource ControlElevationBorderBrush}"
                    BorderThickness="1"
                    CornerRadius="4">
                    <controls:SnapScreenViewer
                        Height="400"
                        ItemsSource="{Binding SnapScreens, Mode=TwoWay}"
                        SelectedItem="{Binding SelectedSnapScreen, Mode=TwoWay}">
                        <controls:SnapScreenViewer.ItemContainerStyle>
                            <Style TargetType="{x:Type ListViewItem}">
                                <Setter Property="Foreground">
                                    <Setter.Value>
                                        <SolidColorBrush Color="{DynamicResource TextFillColorPrimary}" />
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="Background" Value="Transparent" />
                                <Setter Property="BorderBrush">
                                    <Setter.Value>
                                        <SolidColorBrush Color="{DynamicResource SystemAccentColorSecondary}" />
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="SnapsToDevicePixels" Value="True" />
                                <Setter Property="OverridesDefaultStyle" Value="True" />
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type ListViewItem}">
                                            <Border
                                                x:Name="ItemBorder"
                                                Margin="0"
                                                Padding="4"
                                                HorizontalAlignment="Left"
                                                VerticalAlignment="Top"
                                                Background="{TemplateBinding Background}"
                                                BorderThickness="1"
                                                CornerRadius="4">
                                                <Border.BorderBrush>
                                                    <SolidColorBrush Opacity="0.0" Color="{DynamicResource SystemAccentColorSecondary}" />
                                                </Border.BorderBrush>
                                                <Grid>
                                                    <controls:SnapControl
                                                        IsDesignMode="False"
                                                        IsPreview="True"
                                                        Layout="{Binding Layout}" />

                                                    <ToggleButton
                                                        Width="30"
                                                        Height="30"
                                                        Margin="8,12"
                                                        Padding="0"
                                                        HorizontalAlignment="Right"
                                                        VerticalAlignment="Top"
                                                        Panel.ZIndex="9"
                                                        IsChecked="{Binding IsActive, Mode=TwoWay, Converter={StaticResource InverseBoolConverter}}">
                                                        <ui:SymbolIcon Symbol="CircleOff16" />
                                                    </ToggleButton>

                                                    <Grid Background="{DynamicResource SolidBackgroundFillColorQuarternaryBrush}" Visibility="{Binding IsActive, Converter={StaticResource EqualVisibilityConverter}, ConverterParameter={StaticResource FalseValue}}">
                                                        <ui:SymbolIcon
                                                            Panel.ZIndex="9"
                                                            FontSize="80"
                                                            Opacity="0.5"
                                                            Symbol="CircleOff16" />
                                                    </Grid>

                                                    <Grid Background="{DynamicResource SolidBackgroundFillColorQuarternaryBrush}" Opacity="0.4" />
                                                    <Grid>
                                                        <Border
                                                            Margin="12"
                                                            Padding="6"
                                                            HorizontalAlignment="Left"
                                                            VerticalAlignment="Bottom"
                                                            Background="{DynamicResource SolidBackgroundFillColorBaseBrush}"
                                                            CornerRadius="4">

                                                            <StackPanel Grid.Row="1">
                                                                <TextBlock Text="{Binding Resolution}" />
                                                                <TextBlock Text="{Binding Primary, TargetNullValue=null}" Visibility="{Binding Primary, Converter={StaticResource NullVisibilityConverter}}" />
                                                                <TextBlock Text="{Binding Layout.Name}" TextTrimming="CharacterEllipsis" />
                                                            </StackPanel>
                                                        </Border>
                                                    </Grid>
                                                </Grid>
                                            </Border>

                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsSelected" Value="True">
                                                    <Trigger.EnterActions>
                                                        <BeginStoryboard>
                                                            <Storyboard>
                                                                <DoubleAnimation
                                                                    Storyboard.TargetName="ItemBorder"
                                                                    Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Opacity)"
                                                                    From="0.0"
                                                                    To="1.0"
                                                                    Duration="0:0:.16" />
                                                            </Storyboard>
                                                        </BeginStoryboard>
                                                    </Trigger.EnterActions>
                                                    <Trigger.ExitActions>
                                                        <BeginStoryboard>
                                                            <Storyboard>
                                                                <DoubleAnimation
                                                                    Storyboard.TargetName="ItemBorder"
                                                                    Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Opacity)"
                                                                    From="1.0"
                                                                    To="0.0"
                                                                    Duration="0:0:.16" />
                                                            </Storyboard>
                                                        </BeginStoryboard>
                                                    </Trigger.ExitActions>
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </controls:SnapScreenViewer.ItemContainerStyle>
                    </controls:SnapScreenViewer>
                </Border>

                <ui:CardControl Margin="0,0,0,8" Icon="{ui:SymbolIcon DataTreemap24}">
                    <ui:CardControl.Header>
                        <StackPanel Grid.Column="0" VerticalAlignment="Center">
                            <TextBlock
                                FontSize="13"
                                FontWeight="Medium"
                                Text="Change Layouts" />
                            <TextBlock
                                FontSize="12"
                                Foreground="{DynamicResource TextFillColorTertiaryBrush}"
                                Text="Select layout to apply it to selected screen. You can also create new layout or edit layout by clicking three-dots menu."
                                TextWrapping="Wrap" />
                        </StackPanel>
                    </ui:CardControl.Header>

                    <StackPanel Orientation="Horizontal">
                        <ui:Button
                            Margin="0,0,12,0"
                            Appearance="Secondary"
                            Command="{Binding NewLayoutCommand}"
                            Content="New"
                            Icon="{ui:SymbolIcon New24}" />

                        <ui:Button
                            Appearance="Secondary"
                            Command="{Binding ImportLayoutCommand}"
                            Content="Import"
                            Icon="{ui:SymbolIcon ArrowImport24}" />
                    </StackPanel>
                </ui:CardControl>
            </StackPanel>

            <ListBox
                Grid.Row="1"
                ItemsSource="{Binding Layouts}"
                SelectedItem="{Binding SelectedLayout, Mode=TwoWay}">
                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>

                            <Border
                                Width="198"
                                Height="154"
                                Margin="4">
                                <Border.OpacityMask>
                                    <VisualBrush>
                                        <VisualBrush.Visual>
                                            <Border
                                                Width="198"
                                                Height="154"
                                                Background="White"
                                                CornerRadius="8" />
                                        </VisualBrush.Visual>
                                    </VisualBrush>
                                </Border.OpacityMask>

                                <controls:SnapControl
                                    Width="200"
                                    Height="156"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    IsDesignMode="False"
                                    IsPreview="True"
                                    Layout="{Binding Mode=OneWay}" />
                            </Border>

                            <TextBlock
                                Grid.Row="1"
                                Margin="0,4"
                                HorizontalAlignment="Center"
                                Text="{Binding Name}"
                                TextWrapping="Wrap" />

                            <ui:Button
                                x:Name="editButton"
                                Margin="12"
                                Padding="4"
                                HorizontalAlignment="Right"
                                VerticalAlignment="Top"
                                Panel.ZIndex="9"
                                Appearance="Secondary"
                                Click="editButton_Click"
                                ClipToBounds="True"
                                Icon="{ui:SymbolIcon ChevronDown24}"
                                Tag="{Binding DataContext, ElementName=grid}">

                                <ui:Button.ContextMenu>
                                    <ContextMenu>
                                        <ui:MenuItem
                                            Command="{Binding Parent.PlacementTarget.Tag.DesignLayoutCommand, RelativeSource={RelativeSource Self}}"
                                            CommandParameter="{Binding}"
                                            Header="Open in Designer" />
                                        <Separator />
                                        <ui:MenuItem
                                            Command="{Binding Parent.PlacementTarget.Tag.OpenRenameDialogCommand, RelativeSource={RelativeSource Self}}"
                                            CommandParameter="{Binding}"
                                            Header="Rename" />
                                        <ui:MenuItem
                                            Command="{Binding Parent.PlacementTarget.Tag.DeleteLayoutCommand, RelativeSource={RelativeSource Self}}"
                                            CommandParameter="{Binding}"
                                            Header="Delete" />
                                        <Separator />
                                        <ui:MenuItem
                                            Command="{Binding Parent.PlacementTarget.Tag.ExportLayoutCommand, RelativeSource={RelativeSource Self}}"
                                            CommandParameter="{Binding}"
                                            Header="Export" />
                                    </ContextMenu>
                                </ui:Button.ContextMenu>
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="Click">
                                        <i:ChangePropertyAction
                                            PropertyName="PlacementTarget"
                                            TargetObject="{Binding ContextMenu, ElementName=editButton}"
                                            Value="{Binding ElementName=editButton, Mode=OneWay}" />
                                        <i:ChangePropertyAction
                                            PropertyName="IsOpen"
                                            TargetObject="{Binding ContextMenu, ElementName=editButton}"
                                            Value="True" />
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>

                                <!--<ui:SymbolIcon Symbol="ChevronDown24" />-->
                            </ui:Button>
                        </Grid>
                    </DataTemplate>
                </ListBox.ItemTemplate>
                <ListBox.ItemsPanel>
                    <ItemsPanelTemplate>
                        <ui:VirtualizingWrapPanel
                            Orientation="Vertical"
                            SpacingMode="Uniform"
                            StretchItems="False" />
                    </ItemsPanelTemplate>
                </ListBox.ItemsPanel>
            </ListBox>
        </Grid>
    </Grid>
</Page>