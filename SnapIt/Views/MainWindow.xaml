<Controls:AcrylicWindow
    x:Class="SnapIt.Views.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:Controls="clr-namespace:SnapIt.Library.Controls;assembly=SnapIt.Library"
    xmlns:c="clr-namespace:SnapIt.Library.Entities;assembly=SnapIt.Library"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
    xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:prism="http://prismlibrary.com/"
    xmlns:vm="clr-namespace:SnapIt.ViewModels.DesignTime"
    x:Name="MainWindowView"
    Title="{Binding Title}"
    Width="860"
    Height="660"
    MinWidth="480"
    MinHeight="440"
    d:DataContext="{d:DesignInstance vm:MainWindowDesignViewModel,
                                     IsDesignTimeCreatable=True}"
    prism:ViewModelLocator.AutoWireViewModel="True"
    AllowsTransparency="True"
    Background="Transparent"
    ResizeMode="CanResizeWithGrip"
    ShowTitleBar="False"
    WindowStyle="None"
    mc:Ignorable="d">

    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Activated">
            <i:InvokeCommandAction Command="{Binding ActivatedCommand}" CommandParameter="{Binding ElementName=MainWindowView}" />
        </i:EventTrigger>
        <i:EventTrigger EventName="Loaded">
            <i:InvokeCommandAction Command="{Binding LoadedCommand}" CommandParameter="{Binding ElementName=MainWindowView}" />
        </i:EventTrigger>
        <i:EventTrigger EventName="Closing">
            <i:InvokeCommandAction Command="{Binding ClosingWindowCommand}" PassEventArgsToCommand="True" />
        </i:EventTrigger>
    </i:Interaction.Triggers>

    <Grid>
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition />
            </Grid.RowDefinitions>

            <Grid Grid.RowSpan="2">
                <Grid Visibility="{Binding IsPaneOpen, Converter={StaticResource EqualVisibilityConverter}, ConverterParameter={StaticResource TrueValue}}">
                    <Rectangle
                        Width="240"
                        HorizontalAlignment="Left"
                        Fill="{DynamicResource MahApps.Brushes.Accent}"
                        Opacity="0.92" />
                    <Rectangle Margin="240,0,0,0" Fill="{DynamicResource MahApps.Brushes.ThemeBackground}" />
                </Grid>
                <Grid Visibility="{Binding IsPaneOpen, Converter={StaticResource EqualVisibilityConverter}, ConverterParameter={StaticResource FalseValue}}">
                    <Rectangle
                        Width="48"
                        HorizontalAlignment="Left"
                        Fill="{DynamicResource MahApps.Brushes.Accent}"
                        Opacity="0.92" />
                    <Rectangle Margin="48,0,0,0" Fill="{DynamicResource MahApps.Brushes.ThemeBackground}" />
                </Grid>
            </Grid>

            <mah:HamburgerMenu
                x:Name="HamburgerMenuControl"
                Grid.Row="2"
                DisplayMode="CompactInline"
                IsPaneOpen="{Binding IsPaneOpen}"
                ItemCommand="{Binding NavigateCommand}"
                ItemCommandParameter="{Binding SelectedItem.CommandParameter, ElementName=HamburgerMenuControl}"
                ItemContainerStyle="{DynamicResource HamburgerMenuItemStyle}"
                ItemTemplate="{StaticResource HamburgerMenuItem}"
                OptionsItemContainerStyle="{DynamicResource HamburgerMenuItemStyle}"
                OptionsItemTemplate="{StaticResource HamburgerMenuItem}"
                PaneBackground="Transparent"
                PaneForeground="White"
                SelectedIndex="0"
                ShowSelectionIndicator="True">

                <!--  Items  -->
                <mah:HamburgerMenu.ItemsSource>
                    <mah:HamburgerMenuItemCollection>
                        <mah:HamburgerMenuGlyphItem CommandParameter="LayoutView" Label="Layout">
                            <mah:HamburgerMenuGlyphItem.Tag>
                                <iconPacks:PackIconMaterial
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Kind="BorderAll" />
                            </mah:HamburgerMenuGlyphItem.Tag>
                        </mah:HamburgerMenuGlyphItem>

                        <mah:HamburgerMenuGlyphItem CommandParameter="MouseSettingsView" Label="Mouse">
                            <mah:HamburgerMenuGlyphItem.Tag>
                                <iconPacks:PackIconMaterial
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Kind="Mouse" />
                            </mah:HamburgerMenuGlyphItem.Tag>
                        </mah:HamburgerMenuGlyphItem>

                        <mah:HamburgerMenuGlyphItem CommandParameter="KeyboardSettingsView" Label="Keyboard">
                            <mah:HamburgerMenuGlyphItem.Tag>
                                <iconPacks:PackIconMaterial
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Kind="KeyboardOutline" />
                            </mah:HamburgerMenuGlyphItem.Tag>
                        </mah:HamburgerMenuGlyphItem>

                        <mah:HamburgerMenuGlyphItem CommandParameter="WindowsView" Label="Window">
                            <mah:HamburgerMenuGlyphItem.Tag>
                                <iconPacks:PackIconMaterial
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Kind="WindowRestore" />
                            </mah:HamburgerMenuGlyphItem.Tag>
                        </mah:HamburgerMenuGlyphItem>

                        <mah:HamburgerMenuGlyphItem CommandParameter="ThemeView" Label="Theme">
                            <mah:HamburgerMenuGlyphItem.Tag>
                                <iconPacks:PackIconMaterial
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Kind="PaletteOutline" />
                            </mah:HamburgerMenuGlyphItem.Tag>
                        </mah:HamburgerMenuGlyphItem>

                        <mah:HamburgerMenuGlyphItem CommandParameter="SettingsView" Label="Settings">
                            <mah:HamburgerMenuGlyphItem.Tag>
                                <iconPacks:PackIconMaterial
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Kind="CogOutline" />
                            </mah:HamburgerMenuGlyphItem.Tag>
                        </mah:HamburgerMenuGlyphItem>

                        <!--<mah:HamburgerMenuGlyphItem Label="Tutorials">
                            <mah:HamburgerMenuGlyphItem.Tag>
                                <iconPacks:PackIconMaterial
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Kind="BookOpenPageVariantOutline" />
                            </mah:HamburgerMenuGlyphItem.Tag>
                        </mah:HamburgerMenuGlyphItem>-->

                        <mah:HamburgerMenuGlyphItem CommandParameter="WhatsNewView" Label="What's New">
                            <mah:HamburgerMenuGlyphItem.Tag>
                                <iconPacks:PackIconMaterial
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Kind="FileDocumentMultipleOutline" />
                            </mah:HamburgerMenuGlyphItem.Tag>
                        </mah:HamburgerMenuGlyphItem>

                        <mah:HamburgerMenuGlyphItem CommandParameter="AboutView" Label="About">
                            <mah:HamburgerMenuGlyphItem.Tag>
                                <iconPacks:PackIconMaterial
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Kind="InformationVariant" />
                            </mah:HamburgerMenuGlyphItem.Tag>
                        </mah:HamburgerMenuGlyphItem>
                    </mah:HamburgerMenuItemCollection>
                </mah:HamburgerMenu.ItemsSource>

                <!--  Options  -->
                <mah:HamburgerMenu.OptionsItemsSource>
                    <mah:HamburgerMenuItemCollection>
                        <mah:HamburgerMenuSeparatorItem />
                        <mah:HamburgerMenuImageItem IsEnabled="False" />
                    </mah:HamburgerMenuItemCollection>
                </mah:HamburgerMenu.OptionsItemsSource>

                <!--  Content  -->
                <mah:HamburgerMenu.Content>
                    <mah:TransitioningContentControl
                        x:Name="MainContentControl"
                        prism:RegionManager.RegionName="{x:Static c:Constants.MainRegion}"
                        RestartTransitionOnContentChange="True"
                        Transition="Default" />
                </mah:HamburgerMenu.Content>
            </mah:HamburgerMenu>

            <Grid MouseMove="Grid_MouseMove">
                <TextBlock />
                <StackPanel
                    Margin="62,10,0,0"
                    VerticalAlignment="Top"
                    Orientation="Horizontal"
                    Visibility="{Binding IsPaneOpen, Converter={StaticResource EqualVisibilityConverter}, ConverterParameter={StaticResource FalseValue}}">
                    <TextBlock Foreground="White" Text="{x:Static c:Constants.AppName}" />
                    <TextBlock
                        Foreground="LightGray"
                        Text=" - "
                        Visibility="{Binding LicenseText, Converter={StaticResource StringNullOrEmptyToVisibilityConverter}}" />
                    <TextBlock
                        VerticalAlignment="Center"
                        FontSize="10"
                        Foreground="LightGray"
                        Text="{Binding LicenseText}"
                        TextTrimming="CharacterEllipsis" />
                </StackPanel>
                <Grid
                    MaxWidth="290"
                    Margin="10"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Top"
                    Visibility="{Binding IsPaneOpen, Converter={StaticResource EqualVisibilityConverter}, ConverterParameter={StaticResource TrueValue}}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <TextBlock Foreground="White" Text="{x:Static c:Constants.AppName}" />
                    <TextBlock
                        Grid.Column="1"
                        Foreground="LightGray"
                        Text=" - "
                        Visibility="{Binding LicenseText, Converter={StaticResource StringNullOrEmptyToVisibilityConverter}}" />
                    <TextBlock
                        Grid.Column="2"
                        VerticalAlignment="Center"
                        FontSize="10"
                        Foreground="LightGray"
                        Text="{Binding LicenseText}"
                        TextTrimming="CharacterEllipsis"
                        ToolTip="{Binding LicenseText}" />
                </Grid>
            </Grid>

            <Grid
                Grid.Row="2"
                Width="48"
                Height="58"
                HorizontalAlignment="Left"
                VerticalAlignment="Bottom"
                Visibility="{Binding IsPaneOpen, Converter={StaticResource EqualVisibilityConverter}, ConverterParameter={StaticResource FalseValue}}">

                <ToggleButton
                    Width="40"
                    Margin="4"
                    HorizontalAlignment="Left"
                    Command="{Binding StartStopCommand}"
                    IsChecked="{Binding IsRunning}"
                    Style="{DynamicResource SnapIt.Styles.ToggleButton.Flat}">
                    <Grid>
                        <iconPacks:PackIconMaterial
                            VerticalAlignment="Center"
                            Kind="Pause"
                            Visibility="{Binding IsRunning, Converter={StaticResource EqualVisibilityConverter}, ConverterParameter={StaticResource TrueValue}}" />
                        <iconPacks:PackIconMaterial
                            VerticalAlignment="Center"
                            Kind="Play"
                            Visibility="{Binding IsRunning, Converter={StaticResource EqualVisibilityConverter}, ConverterParameter={StaticResource FalseValue}}" />
                    </Grid>
                </ToggleButton>
            </Grid>

            <Grid
                Grid.Row="2"
                Width="240"
                Height="58"
                HorizontalAlignment="Left"
                VerticalAlignment="Bottom"
                Visibility="{Binding IsPaneOpen, Converter={StaticResource EqualVisibilityConverter}, ConverterParameter={StaticResource TrueValue}}">

                <ToggleButton
                    Margin="8"
                    Padding="14,5"
                    HorizontalAlignment="Left"
                    Command="{Binding StartStopCommand}"
                    IsChecked="{Binding IsRunning}"
                    Style="{DynamicResource SnapIt.Styles.ToggleButton.Flat}">
                    <Grid>
                        <iconPacks:PackIconMaterial
                            VerticalAlignment="Center"
                            Kind="Pause"
                            Visibility="{Binding IsRunning, Converter={StaticResource EqualVisibilityConverter}, ConverterParameter={StaticResource TrueValue}}" />
                        <iconPacks:PackIconMaterial
                            VerticalAlignment="Center"
                            Kind="Play"
                            Visibility="{Binding IsRunning, Converter={StaticResource EqualVisibilityConverter}, ConverterParameter={StaticResource FalseValue}}" />
                        <TextBlock Margin="24,0,0,0" Text="{Binding Status}" />
                    </Grid>
                </ToggleButton>

                <mah:DropDownButton
                    Margin="8"
                    HorizontalAlignment="Right"
                    ArrowBrush="White"
                    ArrowMouseOverBrush="LightGray"
                    ArrowPressedBrush="White"
                    Background="Transparent"
                    BorderThickness="0"
                    ButtonStyle="{DynamicResource SnapIt.Styles.Button.Flat}"
                    Foreground="White"
                    ItemsSource="{Binding ThemeList}">
                    <mah:DropDownButton.ItemContainerStyle>
                        <Style BasedOn="{StaticResource {x:Type MenuItem}}" TargetType="{x:Type MenuItem}">
                            <Setter Property="Command" Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type mah:DropDownButton}}, Path=DataContext.ThemeItemCommand}" />
                            <Setter Property="CommandParameter" Value="{Binding}" />
                        </Style>
                    </mah:DropDownButton.ItemContainerStyle>
                    <mah:DropDownButton.Icon>
                        <iconPacks:PackIconMaterial Margin="6" Kind="ThemeLightDark" />
                    </mah:DropDownButton.Icon>
                </mah:DropDownButton>
            </Grid>

            <StackPanel
                Margin="0,0,140,0"
                HorizontalAlignment="Right"
                VerticalAlignment="Top"
                Orientation="Horizontal">
                <Button
                    Height="30"
                    Padding="14,6"
                    Command="{Binding TrialVersionCommand}"
                    Content="Trial Version"
                    FontSize="13"
                    FontWeight="Light"
                    Style="{StaticResource SnapIt.Styles.Button.Flat}"
                    ToolTip="Trial Version"
                    Visibility="{Binding IsTrial, Converter={StaticResource EqualVisibilityConverter}, ConverterParameter={StaticResource TrueValue}}" />

                <Button
                    Height="30"
                    Padding="14,6"
                    Command="{Binding HandleLinkClick}"
                    CommandParameter="{x:Static c:Constants.AppFeedbackUrl}"
                    FontSize="13"
                    FontWeight="Light"
                    Style="{StaticResource SnapIt.Styles.Button.Flat}"
                    ToolTip="Give Feedback">
                    <StackPanel Orientation="Horizontal">
                        <iconPacks:PackIconMaterial
                            Width="14"
                            Height="14"
                            VerticalAlignment="Center"
                            Kind="MessageAlertOutline" />
                        <TextBlock Margin="8,0,0,0" Text="Feedback" />
                    </StackPanel>
                </Button>
            </StackPanel>
        </Grid>
    </Grid>
</Controls:AcrylicWindow>