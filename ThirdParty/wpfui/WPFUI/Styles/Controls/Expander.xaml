<!--
    This Source Code Form is subject to the terms of the MIT License.
    If a copy of the MIT was not distributed with this file, You can obtain one at https://opensource.org/licenses/MIT.
    Copyright (C) Leszek Pomianowski and WPF UI Contributors.
    All Rights Reserved.
-->

<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:controls="clr-namespace:WPFUI.Controls">

    <ControlTemplate x:Key="UiExpanderToggleButton" TargetType="{x:Type ToggleButton}">
        <Border
            x:Name="Border"
            Margin="0"
            Padding="0"
            VerticalAlignment="Center"
            Background="Transparent"
            BorderBrush="Transparent"
            BorderThickness="0"
            CornerRadius="0"
            RenderTransformOrigin="0.5, 0.5">
            <Border.RenderTransform>
                <RotateTransform Angle="0" />
            </Border.RenderTransform>
            <controls:Icon
                x:Name="Chevron"
                FontSize="16"
                Glyph="ChevronDown20" />
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsChecked" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation
                                Storyboard.TargetName="Border"
                                Storyboard.TargetProperty="(Border.RenderTransform).(RotateTransform.Angle)"
                                To="180"
                                Duration="0:0:0.16" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation
                                Storyboard.TargetName="Border"
                                Storyboard.TargetProperty="(Border.RenderTransform).(RotateTransform.Angle)"
                                To="0"
                                Duration="0:0:0.16" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style TargetType="{x:Type Expander}">
        <Setter Property="Foreground">
            <Setter.Value>
                <SolidColorBrush Color="{DynamicResource TextFillColorPrimary}" />
            </Setter.Value>
        </Setter>
        <Setter Property="Background">
            <Setter.Value>
                <SolidColorBrush Color="{DynamicResource ControlFillColorDefault}" />
            </Setter.Value>
        </Setter>
        <Setter Property="BorderBrush" Value="{DynamicResource ControlElevationBorderBrush}" />
        <Setter Property="Padding" Value="12" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Expander}">
                    <Border
                        x:Name="Border"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="1"
                        CornerRadius="4,4,4,4">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <Grid Grid.Row="0" Margin="{TemplateBinding Padding}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>

                                <ContentPresenter
                                    Grid.Column="0"
                                    ContentSource="Header"
                                    RecognizesAccessKey="True" />

                                <ToggleButton
                                    Grid.Column="1"
                                    IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                    OverridesDefaultStyle="True"
                                    Template="{StaticResource UiExpanderToggleButton}" />
                            </Grid>

                            <Border
                                x:Name="ContentGrid"
                                Grid.Row="1"
                                Background="Transparent"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                Opacity="0.0">
                                <ContentPresenter Margin="{TemplateBinding Padding}" />
                                <Border.LayoutTransform>
                                    <ScaleTransform ScaleY="0" />
                                </Border.LayoutTransform>
                            </Border>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="True">
                            <Setter TargetName="ContentGrid" Property="BorderThickness" Value="0,1,0,0" />
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="ContentGrid"
                                            Storyboard.TargetProperty="(Border.LayoutTransform).(ScaleTransform.ScaleY)"
                                            To="1"
                                            Duration="0:0:0.16" />
                                        <DoubleAnimation
                                            Storyboard.TargetName="ContentGrid"
                                            Storyboard.TargetProperty="(Border.Opacity)"
                                            To="1.0"
                                            Duration="0:0:0.16" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="ContentGrid"
                                            Storyboard.TargetProperty="(Border.LayoutTransform).(ScaleTransform.ScaleY)"
                                            To="0"
                                            Duration="0:0:0.16" />
                                        <DoubleAnimation
                                            Storyboard.TargetName="ContentGrid"
                                            Storyboard.TargetProperty="(Border.Opacity)"
                                            To="0.0"
                                            Duration="0:0:0.16" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.8" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>